# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bjlYv8SWPsQSFpHmyfl5r59lvGOBmiuo
"""

import os
import torch
import torchvision.transforms as transforms
from torchvision.datasets import ImageFolder
from torch.utils.data import DataLoader
import torch.nn as nn
import torch.optim as optim

from fastai.vision.all import *
from google.colab import files

from google.colab import drive
drive.mount('/content/drive')

data_path = '/content/drive/My Drive/f&v dataset'  # Replace with the actual path

classes = os.listdir(data_path + "/train")
num_classes = len(classes)

# print(f'Total Number of Classes {len(classes)}')
print(num_classes)
print(f'Classes Names: {classes}')

# Data loading and transformation
transform = transforms.Compose([
    transforms.Resize((224, 224)),  # Resize images to 224x224
    transforms.ToTensor(),
])

# Load the dataset using ImageDataLoaders
train_dataset = ImageDataLoaders.from_folder(data_path + "/train",
                                             valid_pct=0.2,
                                             seed=420,
                                             item_tfms=Resize(224),
                                             batch_tfms=aug_transforms(),
                                             bs=32)  # Adjust batch size as needed

model = cnn_learner(train_dataset, resnet34, metrics=error_rate, pretrained=True)
model.fine_tune(5)

model_path = '/content/drive/My Drive/new_model3'
model.export(model_path)
weights_path = '/content/drive/My Drive/new_model3weights'
torch.save(model.model.state_dict(), weights_path)